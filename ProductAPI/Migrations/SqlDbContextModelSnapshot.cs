// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductApi;

#nullable disable

namespace ProductAPI.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProductLib.Pricing", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectedFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Pricing");
                });

            modelBuilder.Entity("ProductLib.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("Id");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint")
                        .HasColumnName("Category");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedOn");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdatedOn");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "48304f9d-31f1-42de-a995-8c221e23e19f",
                            Category = (byte)1,
                            Code = "PRD001",
                            CreatedOn = new DateTime(2023, 12, 3, 6, 17, 45, 498, DateTimeKind.Local).AddTicks(9389),
                            Name = "Coca"
                        },
                        new
                        {
                            Id = "80e87162-07bd-4fa2-91d7-ac2cf6761da8",
                            Category = (byte)32,
                            Code = "PRD002",
                            CreatedOn = new DateTime(2023, 12, 3, 6, 17, 45, 498, DateTimeKind.Local).AddTicks(9525),
                            Name = "Dream 125"
                        },
                        new
                        {
                            Id = "4e6a9f5c-5993-4886-9954-b957ecc0a420",
                            Category = (byte)4,
                            Code = "PRD003",
                            CreatedOn = new DateTime(2023, 12, 3, 6, 17, 45, 498, DateTimeKind.Local).AddTicks(9531),
                            Name = "TShirt-SEA game 2023"
                        });
                });

            modelBuilder.Entity("ProductLib.Pricing", b =>
                {
                    b.HasOne("ProductLib.Product", "Product")
                        .WithMany("Pricings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductLib.Product", b =>
                {
                    b.Navigation("Pricings");
                });
#pragma warning restore 612, 618
        }
    }
}
