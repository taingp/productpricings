// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductApi;

#nullable disable

namespace ProductAPI.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20231203034652_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProductLib.Pricing", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedOn");

                    b.Property<DateTime>("EffectedFrom")
                        .HasColumnType("datetime")
                        .HasColumnName("EffectedFrom");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdatedOn");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,5)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Pricings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "17aacbe9-3008-4fb9-a66a-cbce91db79dd",
                            CreatedOn = new DateTime(2023, 12, 3, 10, 46, 52, 624, DateTimeKind.Local).AddTicks(2071),
                            EffectedFrom = new DateTime(2023, 12, 3, 10, 46, 52, 624, DateTimeKind.Local).AddTicks(2056),
                            ProductId = "41eb3bb0-1748-4f08-9ab3-4095456e3443",
                            Value = 8.5m
                        },
                        new
                        {
                            Id = "9c04f7ae-cf7b-4c72-ab95-01b684db8262",
                            CreatedOn = new DateTime(2023, 12, 3, 10, 46, 52, 624, DateTimeKind.Local).AddTicks(2078),
                            EffectedFrom = new DateTime(2023, 12, 3, 10, 46, 52, 624, DateTimeKind.Local).AddTicks(2056),
                            ProductId = "d302a420-a014-48ed-bfa6-42307e6b8e96",
                            Value = 2350m
                        },
                        new
                        {
                            Id = "e820be79-3f45-4b8c-803f-d7478a887f8a",
                            CreatedOn = new DateTime(2023, 12, 3, 10, 46, 52, 624, DateTimeKind.Local).AddTicks(2081),
                            EffectedFrom = new DateTime(2023, 12, 3, 10, 46, 52, 624, DateTimeKind.Local).AddTicks(2056),
                            ProductId = "54244d5f-ccb0-478f-a739-906e451a3f39",
                            Value = 5m
                        });
                });

            modelBuilder.Entity("ProductLib.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("Id");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint")
                        .HasColumnName("Category");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedOn");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdatedOn");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "41eb3bb0-1748-4f08-9ab3-4095456e3443",
                            Category = (byte)1,
                            Code = "PRD001",
                            CreatedOn = new DateTime(2023, 12, 3, 10, 46, 52, 624, DateTimeKind.Local).AddTicks(1999),
                            Name = "Coca"
                        },
                        new
                        {
                            Id = "d302a420-a014-48ed-bfa6-42307e6b8e96",
                            Category = (byte)32,
                            Code = "PRD002",
                            CreatedOn = new DateTime(2023, 12, 3, 10, 46, 52, 624, DateTimeKind.Local).AddTicks(2019),
                            Name = "Dream 125"
                        },
                        new
                        {
                            Id = "54244d5f-ccb0-478f-a739-906e451a3f39",
                            Category = (byte)4,
                            Code = "PRD003",
                            CreatedOn = new DateTime(2023, 12, 3, 10, 46, 52, 624, DateTimeKind.Local).AddTicks(2024),
                            Name = "TShirt-SEA game 2023"
                        });
                });

            modelBuilder.Entity("ProductLib.Pricing", b =>
                {
                    b.HasOne("ProductLib.Product", "Product")
                        .WithMany("Pricings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductLib.Product", b =>
                {
                    b.Navigation("Pricings");
                });
#pragma warning restore 612, 618
        }
    }
}
